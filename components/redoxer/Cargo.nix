
# Generated by crate2nix 0.6.0-alpha.0 with the command:
#   "generate"
# See https://github.com/kolloch/crate2nix for more info.

{ pkgs? import <nixpkgs> { config = {}; },
  lib? pkgs.lib,
  callPackage? pkgs.callPackage,
  stdenv? pkgs.stdenv,
  buildRustCrate? pkgs.buildRustCrate,
  fetchurl? pkgs.fetchurl,
  fetchCrate? pkgs.fetchCrate,
  # The features to enable for the root_crate or the workspace_members.
  rootFeatures? ["default"]}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = {
    packageId = "redoxer 0.2.9 (path+file:///home/user/redox-nix/redoxer)";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = buildRustCrateWithFeatures {
      packageId = "redoxer 0.2.9 (path+file:///home/user/redox-nix/redoxer)";
      features = rootFeatures;
    };
  };
  root_crate =
    builtins.trace "root_crate is deprecated since crate2nix 0.4. Please use rootCrate instead." rootCrate.build;
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "redoxer" = {
      packageId = "redoxer 0.2.9 (path+file:///home/user/redox-nix/redoxer)";
      build = buildRustCrateWithFeatures {
        packageId = "redoxer 0.2.9 (path+file:///home/user/redox-nix/redoxer)";
        features = rootFeatures;
      };
    };
  };
  workspace_members =
    builtins.trace
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "private" attributes that may change in every new version of crate2nix.
  #

  # Build and dependency information for crates.
  # Many of the fields are passed one-to-one to buildRustCrate.
  #
  # Noteworthy:
  # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
  # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
  #   but with additional information which is used during dependency/feature resolution.
  # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.

  crates = {
    "adler32 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "adler32";
        version = "1.0.3";
        edition = "2015";
        sha256 = "1z3mvjgw02mbqk98kizzibrca01d5wfkpazsrp3vkkv3i56pn6fb";
        authors = [
          "Remi Rampin <remirampin@gmail.com>"
        ];
        features = {
        };
      };
    "arg_parser 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arg_parser";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1v1smylyazd7s30c40p8w3j5f45zab2sk5b3nfdca6qjpvv7p6g4";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
        ];
        features = {
        };
      };
    "argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "argon2rs";
        version = "0.2.5";
        edition = "2015";
        sha256 = "1byl9b3wwyrarn8qack21v5fi2qsnn3y5clvikk2apskhmnih1rw";
        authors = [
          "bryant <bryant@defrag.in>"
        ];
        dependencies = {
          "blake2-rfc" = "blake2-rfc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
          "scoped_threadpool" = "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "simd" = [ "blake2-rfc/simd_asm" ];
        };
      };
    "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayvec";
        version = "0.4.10";
        edition = "2015";
        sha256 = "0qbh825i59w5wfdysqdkiwbwkrsy7lgbd4pwbyb8pxx8wc36iny8";
        authors = [
          "bluss"
        ];
        dependencies = {
          "nodrop" = {
            packageId = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
    "autocfg 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "autocfg";
        version = "0.1.4";
        edition = "2015";
        sha256 = "1xhpq1h2rqhqx95rc20x3wxi5yhv4a62jr269b8dqyhp8r84ss9i";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
        };
      };
    "backtrace 0.3.32 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace";
        version = "0.3.32";
        edition = "2018";
        sha256 = "0f20pb4jm5lgv27mv3skbvlq7c2mysk7k4lvgwsgbjmdmclc14bd";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "backtrace-sys" = {
            packageId = "backtrace-sys 0.1.30 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rustc-demangle" = "rustc-demangle 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" "goblin" ];
          "libbacktrace" = [ "backtrace-sys" ];
          "rustc-dep-of-std" = [ "backtrace-sys/rustc-dep-of-std" "cfg-if/rustc-dep-of-std" "core" "compiler_builtins" "libc/rustc-dep-of-std" "rustc-demangle/rustc-dep-of-std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
    "backtrace-sys 0.1.30 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace-sys";
        version = "0.1.30";
        edition = "2015";
        sha256 = "023k63xhlkm15hj2j75sqlsa28qc3f3szs1rdlnz09xzs04f42qn";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "base64 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "base64";
        version = "0.9.3";
        edition = "2015";
        sha256 = "11hhz8ln4zbpn2h2gm9fbbb9j254wrd4fpmddlyah2rrnqsmmqkd";
        authors = [
          "Alice Maz <alice@alicemaz.com>"
          "Marshall Pierce <marshall@mpierce.org>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "safemem" = "safemem 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "bidir-map 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bidir-map";
        version = "0.6.0";
        edition = "2015";
        sha256 = "0hqjlrcc22fbsgi5aj74k4ymqa61yz0gyy7vl3k1sigw8bqpd677";
        authors = [
          "nabijaczleweli <nabijaczleweli@gmail.com>"
          "Jake Goulding <jake.goulding@gmail.com>"
          "kennytm <kennytm@gmail.com>"
          "Boscop <kingboscop@gmail.com>"
        ];
        features = {
        };
      };
    "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitflags";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1iwa4jrqcf4lnbwl562a3lx3r0jkh1j88b219bsqvbm4sni67dyv";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "blake2-rfc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "blake2-rfc";
        version = "0.2.18";
        edition = "2015";
        sha256 = "0pyqrik4471ljk16prs0iwb2sam39z0z6axyyjxlqxdmf4wprf0l";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        dependencies = {
          "arrayvec" = {
            packageId = "arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "constant_time_eq" = "constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "simd_asm" = [ "simd_opt" ];
          "simd_opt" = [ "simd" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "block-buffer";
        version = "0.7.3";
        edition = "2015";
        sha256 = "0kryp6l1ia1f5vxmmzggx0pnc5zqxm6m9m9wvh5y0b3wdcj5xm1v";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "block-padding" = "block-padding 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "byte-tools" = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "byteorder" = {
            packageId = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "generic-array" = "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "block-padding 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "block-padding";
        version = "0.1.4";
        edition = "2015";
        sha256 = "08xvr2spxn614x5scn1wsv8a8daslmj1b3n94n644ygb13gsq8zq";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "byte-tools" = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byte-tools";
        version = "0.3.1";
        edition = "2015";
        sha256 = "01hfp59bxq74glhfmhvm9wma2migq2kfmvcvqq5pssk5k52g8ja0";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
    "bytecount 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bytecount";
        version = "0.1.7";
        edition = "2015";
        sha256 = "0ni7hz2dv8lv1659vsc7sjw9ha9gsdq7brkdnpp6x4n9dxxk5r97";
        authors = [
          "Andre Bogus <bogusandre@gmail.de>"
          "Joshua Landau <joshua@landau.ws>"
        ];
        features = {
          "avx-accel" = [ "simd-accel" ];
          "simd-accel" = [ "simd" ];
        };
      };
    "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byteorder";
        version = "1.3.2";
        edition = "2015";
        sha256 = "099fxwc79ncpcl8dgg9hql8gznz11a3sjs7pai0mg6w8r05khvdx";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "c2-chacha 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "c2-chacha";
        version = "0.2.2";
        edition = "2018";
        sha256 = "1lcfazshbiw8kdpcgphlmls0mz5j4wnvsq1diaz4b2bcvgm3r2cn";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        dependencies = {
          "lazy_static" = {
            packageId = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "ppv-lite86" = {
            packageId = "ppv-lite86 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "ppv-lite86";
          };
        };
        features = {
          "default" = [ "std" "simd" "rustcrypto_api" ];
          "rustcrypto_api" = [ "stream-cipher" "byteorder" ];
          "simd" = [ "ppv-lite86/simd" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "lazy_static" "simd" "std" ];
      };
    "cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cc";
        version = "1.0.37";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "1m5s357yi2amgd0kd8chxdcbnscyxwxifmf5hgv92x5xj56b3shj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "rayon" ];
        };
      };
    "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cfg-if";
        version = "0.1.9";
        edition = "2015";
        sha256 = "13g9p2mc5b2b5wn716fwvilzib376ycpkgk868yxfp16jzix57p7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "054n9ngh6pkknpmd4acgdsp40iw6f5jzq8a4h2b76gnbvk6p5xjh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = {
          "bitflags" = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "textwrap" = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-width" = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
      };
    "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = {
          "bitflags" = {
            packageId = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
    "constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "constant_time_eq";
        version = "0.1.3";
        edition = "2015";
        sha256 = "03qri9hjf049gwqg9q527lybpg918q6y5q4g9a5lma753nff49wd";
        authors = [
          "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
        ];
        features = {
        };
      };
    "crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crc32fast";
        version = "1.2.0";
        edition = "2015";
        sha256 = "1mx88ndqln6vzg7hjhjp8b7g0qggpqggsjrlsdqrfsrbpdzffcn8";
        authors = [
          "Sam Rijs <srijs@airpost.net>"
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "digest";
        version = "0.8.1";
        edition = "2015";
        sha256 = "18jzwdsfl90bzhbk5ny4rgakhwn3l7pqk2mmqvl4ccb0qy4lhbyr";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "generic-array" = "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "dev" = [ "blobby" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "dirs 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "dirs";
        version = "1.0.5";
        edition = "2015";
        sha256 = "1py68zwwrhlj5vbz9f9ansjmhc8y4gs5bpamw9ycmqz030pprwf3";
        authors = [
          "Simon Ochsenreither <simon@ochsenreither.de>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "redox_users" = {
            packageId = "redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "knownfolders" "objbase" "shlobj" "winbase" "winerror" ];
          };
        };
        features = {
        };
      };
    "err-derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "err-derive";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0a6gq50nxg6a343q62i5ifhvjb7kba4zkpsfq2z16dik1hhjm53n";
        procMacro = true;
        authors = [
          "Thomas Schaller <torkleyy@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)";
          "synstructure" = "synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "rustc_version" = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1msaj1c0fg12dzyf4fhxqlx1gfx41lj2smdjmkc9hkrgajk2g3kx";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = {
          "backtrace" = {
            packageId = "backtrace 0.3.32 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "failure_derive" = {
            packageId = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
    "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure_derive";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1wzk484b87r4qszcvdl2bkniv5ls4r2f2dshz7hmgiv6z4ln12g0";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)";
          "synstructure" = "synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "filetime 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "filetime";
        version = "0.2.6";
        edition = "2018";
        sha256 = "07yx5lmv4mbv5ynqdzviwrgsji42vk8wjvggdiy5daklf6885f94";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "fileapi" "minwindef" "winbase" ];
          };
        };
        features = {
        };
      };
    "fixedbitset 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fixedbitset";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1bkb5aq7h9p4rzlgxagnda1f0dd11q0qz41bmdy11z18q1p8igy1";
        authors = [
          "bluss"
        ];
        features = {
        };
      };
    "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "07apwv9dj716yjlcj29p94vkqn5zmfh7hlrqvrjx3wzshphc95h9";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        features = {
        };
      };
    "fuse 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuse";
        version = "0.3.1";
        edition = "2015";
        sha256 = "06s8fmccm6armmad9wyashxi3lqysw8nyhsgm33nbp3gdh3b9n3d";
        authors = [
          "Andreas Neuhaus <zargony@zargony.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "thread-scoped" = "thread-scoped 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "time" = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "pkg-config" = "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "generic-array";
        version = "0.12.3";
        edition = "2015";
        sha256 = "1b6bvl1zsh5v9d85szkqfq4sw33xsw03mhchjk3zwxs29psg3nns";
        libName = "generic_array";
        authors = [
          "Bartłomiej Kamiński <fizyk20@gmail.com>"
          "Aaron Trent <novacrazy@gmail.com>"
        ];
        dependencies = {
          "typenum" = "typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "getrandom 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "getrandom";
        version = "0.1.6";
        edition = "2018";
        sha256 = "0d14zm2c4fs8jyf5bbz3kwyjm2yqxqspchy6hjc7830yqvsaj3v8";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "lazy_static" = {
            packageId = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          };
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."unix" || (target."os" == "wasi"));
          };
        };
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "httparse 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "httparse";
        version = "1.3.4";
        edition = "2015";
        sha256 = "0dggj4s0cq69bn63q9nqzzay5acmwl33nrbhjjsh5xys8sk2x4jw";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "hyper 0.10.16 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hyper";
        version = "0.10.16";
        edition = "2015";
        sha256 = "078jqmrjk7gdrfqjnydhyh8vb93vr4zymid84l7x67abary947x5";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        dependencies = {
          "base64" = "base64 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "httparse" = "httparse 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "language-tags" = "language-tags 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = "log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "mime" = "mime 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "time" = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
          "traitobject" = "traitobject 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "typeable" = "typeable 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicase" = "unicase 1.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "url" = "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "hyper-rustls 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hyper-rustls";
        version = "0.6.2";
        edition = "2015";
        sha256 = "1qbzq1vlafd40s6rz20m85q5rxgpns824rnkjbfisfbk37ji363v";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = {
          "hyper" = {
            packageId = "hyper 0.10.16 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rustls" = "rustls 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "webpki" = "webpki 0.18.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "webpki-roots" = "webpki-roots 0.15.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "idna";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1gwgl19rz5vzi67rrhamczhxy050f5ynx4ybabfapyalv7z1qmjy";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-bidi" = "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-normalization" = "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "keccak 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "keccak";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0hs47f8pq40pk99vhraz27x98r1h5vgs7kcz4gsnhs58npqiz006";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
    "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi" = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "winapi-build" = "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "language-tags 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "language-tags";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1zkrdzsqzzc7509kd7nngdwrp461glm2g09kqpzaqksp82frjdvy";
        authors = [
          "Pyfisch <pyfisch@gmail.com>"
        ];
        features = {
          "heap_size" = [ "heapsize" "heapsize_plugin" ];
        };
      };
    "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazy_static";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1vv47va18ydk7dx5paz88g3jy1d3lwbx6qpxkbj8gyfv770i4b1y";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = {
          "spin" = {
            packageId = "spin 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "spin_no_std" = [ "spin" ];
        };
        resolvedDefaultFeatures = [ "spin" "spin_no_std" ];
      };
    "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libc";
        version = "0.2.58";
        edition = "2015";
        sha256 = "06yk3c0qlcn925ap1rrhikpzgwf504ydkcadj41kib7a06f66k7c";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "libflate 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libflate";
        version = "0.1.25";
        edition = "2015";
        sha256 = "1sd1rd8i2lqddf98n9lsps76iymqxl7r22swjb9p65lrkipi6m4a";
        authors = [
          "Takeru Ohta <phjgt308@gmail.com>"
        ];
        dependencies = {
          "adler32" = "adler32 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "byteorder" = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "crc32fast" = "crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rle-decode-fast" = "rle-decode-fast 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "take_mut" = "take_mut 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "liner 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "liner";
        version = "0.4.4";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "0xs6j1qwzmgb0dcpkd3w9dzvbgdlzfxv4k0spq062r7v57wwsm88";
        authors = [
          "MovingtoMars <definitelynotliam@gmail.com>"
        ];
        dependencies = {
          "bytecount" = "bytecount 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "termion" = "termion 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-width" = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.3.9";
        edition = "2015";
        sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "log" = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "use_std" ];
          "max_level_debug" = [ "log/max_level_debug" ];
          "max_level_error" = [ "log/max_level_error" ];
          "max_level_info" = [ "log/max_level_info" ];
          "max_level_off" = [ "log/max_level_off" ];
          "max_level_trace" = [ "log/max_level_trace" ];
          "max_level_warn" = [ "log/max_level_warn" ];
          "release_max_level_debug" = [ "log/release_max_level_debug" ];
          "release_max_level_error" = [ "log/release_max_level_error" ];
          "release_max_level_info" = [ "log/release_max_level_info" ];
          "release_max_level_off" = [ "log/release_max_level_off" ];
          "release_max_level_trace" = [ "log/release_max_level_trace" ];
          "release_max_level_warn" = [ "log/release_max_level_warn" ];
          "use_std" = [ "log/std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.4.6";
        edition = "2015";
        sha256 = "1nd8dl9mvc9vd6fks5d4gsxaz990xi6rzlb8ymllshmwi153vngr";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "matches";
        version = "0.1.8";
        edition = "2015";
        sha256 = "03hl636fg6xggy0a26200xs74amk3k9n0908rga2szn68agyz3cv";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
        };
      };
    "mime 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "mime";
        version = "0.2.6";
        edition = "2015";
        sha256 = "1skwwa0j3kqd8rm9387zgabjhp07zj99q71nzlhba4lrz9r911b3";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
        ];
        dependencies = {
          "log" = "log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "heap_size" = [ "heapsize" ];
        };
      };
    "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nodrop";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0gkfx6wihr9z0m8nbdhma5pyvbipznjpkzny2d4zkc05b0vnhinb";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
    "num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num_cpus";
        version = "1.10.1";
        edition = "2015";
        sha256 = "1zi5s2cbnqqb0k0kdd6gqn2x97f9bssv44430h6w28awwzppyh8i";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "numtoa";
        version = "0.1.0";
        edition = "2015";
        sha256 = "1i2wxr96bb1rvax15z843126z3bnl2frpx69vxsp95r96wr24j08";
        authors = [
          "Michael Aaron Murphy <mmstickman@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "opaque-debug 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "opaque-debug";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0dkzsnxpg50gz3gjcdzc4j6g4s0jphllg6q7jqmsy9nd9glidy74";
        authors = [
          "RustCrypto Developers"
        ];
        features = {
        };
      };
    "ordermap 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ordermap";
        version = "0.2.13";
        edition = "2015";
        sha256 = "1qcdv6rk0j1mah38i1asgadn6mynwbvqgj8vq730yvv2gl03fnsl";
        authors = [
          "bluss"
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
      };
    "ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ordermap";
        version = "0.3.5";
        edition = "2015";
        sha256 = "0b6vxfyh627yqm6war3392g1hhi4dbn49ibx2qv6mv490jdhv7d3";
        authors = [
          "bluss"
        ];
        features = {
          "serde-1" = [ "serde" ];
        };
      };
    "partition-identity 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "partition-identity";
        version = "0.2.6";
        edition = "2015";
        sha256 = "0w0hk3frfk53m4n6qv56ir9fwbzf47y33nw2bpn7li9h5sy6vyag";
        authors = [
          "Michael Aaron Murphy <mmstickman@gmail.com>"
        ];
        dependencies = {
          "err-derive" = "err-derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "pbr 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pbr";
        version = "1.0.1";
        edition = "2015";
        sha256 = "0yvg7jcsb05pxshp2mky1a5hwch2b93apid2xpynjbqyzymq6rl9";
        authors = [
          "Ariel Mashraki <ariel@mashraki.co.il>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "kernel32-sys" = {
            packageId = "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
          };
          "libc" = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          "termion" = {
            packageId = "termion 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "time" = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
          };
        };
        features = {
        };
      };
    "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "percent-encoding";
        version = "1.0.1";
        edition = "2015";
        sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
        libPath = "lib.rs";
        authors = [
          "The rust-url developers"
        ];
        features = {
        };
      };
    "petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "petgraph";
        version = "0.4.13";
        edition = "2015";
        sha256 = "0a8k12b9vd0bndwqhafa853w186axdw05bv4kqjimyaz67428g1i";
        authors = [
          "bluss"
          "mitchmindtree"
        ];
        dependencies = {
          "fixedbitset" = "fixedbitset 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "ordermap" = {
            packageId = "ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "all" = [ "unstable" "quickcheck" "stable_graph" "graphmap" ];
          "default" = [ "graphmap" "stable_graph" ];
          "graphmap" = [ "ordermap" ];
          "serde-1" = [ "serde" "serde_derive" ];
          "unstable" = [ "generate" ];
        };
        resolvedDefaultFeatures = [ "default" "graphmap" "ordermap" "stable_graph" ];
      };
    "pkg-config 0.3.14 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pkg-config";
        version = "0.3.14";
        edition = "2015";
        sha256 = "0207fsarrm412j0dh87lfcas72n8mxar7q3mgflsbsrqnb140sv6";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "ppv-lite86 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ppv-lite86";
        version = "0.2.5";
        edition = "2018";
        sha256 = "1r3bhih75vhl8v7q0flmywl7hmfg902yf3jjzracsh0jlkldij6r";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" "simd" ];
        };
        resolvedDefaultFeatures = [ "default" "simd" "std" ];
      };
    "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0iifv51wrm6r4r2gghw6rray3nv53zcap355bbz1nsmbhj5s09b9";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "proc-mounts 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-mounts";
        version = "0.2.2";
        edition = "2015";
        sha256 = "0mdpjri5wm1qbyv7vqsndwan57bgq93x1lyjj5ff3rnk1m0l55fd";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
          "Michael Aaron Murphy <mmstickman@gmail.com>"
        ];
        dependencies = {
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "partition-identity" = "partition-identity 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "0.6.12";
        edition = "2015";
        sha256 = "1ckd2d2sy0hrwrqcr47dn0n3hyh7ygpc026l8xaycccyg27mihv9";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "rand 0.3.23 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.3.23";
        edition = "2015";
        sha256 = "118rairvv46npqqx7hmkf97kkimjrry9z31z4inxcv2vn0nj1s2g";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "nightly" = [ "i128_support" ];
        };
      };
    "rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.4.6";
        edition = "2015";
        sha256 = "0c3rmg5q7d6qdi7cbmg5py9alm70wd3xsg0mmcawrnl35qv37zfs";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "fuchsia-cprng" = {
            packageId = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."unix";
          };
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = (target."env" == "sgx");
          };
          "rdrand" = {
            packageId = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "sgx");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          };
        };
        features = {
          "default" = [ "std" ];
          "nightly" = [ "i128_support" ];
          "std" = [ "libc" ];
        };
        resolvedDefaultFeatures = [ "default" "libc" "std" ];
      };
    "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "0zbck48159aj8zrwzf80sd9xxh96w4f4968nshwjpysjvflimvgb";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "rand_chacha" = "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_core" = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_hc" = "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_isaac" = "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_jitter" = "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_os" = {
            packageId = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "rand_pcg" = "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_xorshift" = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand_os" "std" ];
      };
    "rand 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.7.0";
        edition = "2018";
        sha256 = "00nfv8p95nf985sxdfd7j23br77v47sf9hp95qjna1zsz4fyjs8v";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "getrandom" = {
            packageId = "getrandom 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "getrandom_package";
            optional = true;
          };
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "rand_chacha" = {
            packageId = "rand_chacha 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!(target."os" == "emscripten"));
          };
          "rand_core" = "rand_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_hc" = {
            packageId = "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "emscripten");
          };
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "alloc" "getrandom" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "std" ];
      };
    "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0xnxm4mjd7wjnh18zxc1yickw58axbycp35ciraplqdfwn1gffwi";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rand_chacha 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_chacha";
        version = "0.2.0";
        edition = "2015";
        sha256 = "02mbnky6cz7bacxgxbax438ahsca3wvcjcwnbhp8m2d4gls6fc92";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = {
          "c2-chacha" = {
            packageId = "c2-chacha 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rand_core" = "rand_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "simd" ];
          "simd" = [ "c2-chacha/simd" ];
          "std" = [ "c2-chacha/std" ];
        };
        resolvedDefaultFeatures = [ "default" "simd" "std" ];
      };
    "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0q0ssgpj9x5a6fda83nhmfydy7a6c0wvxm0jhncsmjx8qp8gw91m";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
      };
    "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0wb5iwhffibj0pnpznhv1g3i7h1fnhz64s3nz74fz6vsm3q6q3br";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "rand_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.5.0";
        edition = "2015";
        sha256 = "12xakgqlbi2j0mabap4p908kisw91wjvsp69jphq2mv9hxjqq0gr";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "getrandom" = {
            packageId = "getrandom 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
    "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05agb75j87yp7y1zk8yf7bpm66hc0673r3dlypn0kazynr6fdgkz";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
        };
      };
    "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0592q9kqcna9aiyzy6vp3fadxkkbpfkmi2cnkv48zhybr0v2yf01";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "10hhdh5b5sa03s6b63y9bafm956jwilx41s71jbrzl63ccx8lxdq";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
    "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "13nr4h042ab9l7qcv47bxrxw3gkf2pc3cni6c9pyi4nxla0mm7b6";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = ((target."os" == "macos") || (target."os" == "ios"));
          };
          "rand_core" = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
            features = [ "profileapi" ];
          };
        };
        features = {
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0ywwspizgs9g8vzn6m5ix9yg36n15119d6n792h7mk4r5vs0ww4j";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "cloudabi" = {
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "cloudabi");
          };
          "fuchsia-cprng" = {
            packageId = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand_core" = {
            packageId = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "rdrand" = {
            packageId = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "sgx");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          };
        };
        features = {
        };
      };
    "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "04qgi2ai2z42li5h4aawvxbpnlqyjfnipz9d6k73mdnl6p1xq938";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
    "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0v365c4h4lzxwz5k5kp9m0661s0sss7ylv74if0xb4svis9sswnn";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
    "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "15hrcasn0v876wpkwab1dwbk9kvqwrb3iv4y4dibb6yxnfvzwajk";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "redox_installer 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_installer";
        version = "0.2.4";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "1fk03zaipz9ji3xmyhnxasvmw2nyrxlzj4a4jjl6dwh91pbss5b0";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = {
          "arg_parser" = "arg_parser 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "argon2rs" = {
            packageId = "argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "failure" = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          "liner" = "liner 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_pkgutils" = "redox_pkgutils 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "redoxfs" = "redoxfs 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_derive" = "serde_derive 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)";
          "termion" = "termion 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "toml" = "toml 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "redox_pkgutils 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_pkgutils";
        version = "0.1.3";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "09dnliy8iwb6yi5ni14vznh996lzrmscfy24hscws7n8ak634pzl";
        libName = "pkgutils";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = {
          "bidir-map" = "bidir-map 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "clap" = {
            packageId = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "hyper" = {
            packageId = "hyper 0.10.16 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "hyper-rustls" = "hyper-rustls 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "libflate" = "libflate 0.1.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "liner" = "liner 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "ordermap" = "ordermap 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "pbr" = "pbr 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "petgraph" = "petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde_derive" = "serde_derive 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)";
          "sha3" = "sha3 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "tar" = "tar 0.4.26 (registry+https://github.com/rust-lang/crates.io-index)";
          "toml" = "toml 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "version-compare" = "version-compare 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "0jcp8nd947zcy938bz09pzlmi3vyxfdzg92pjxdvvk0699vwcc26";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        features = {
        };
      };
    "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_termios";
        version = "0.1.1";
        edition = "2015";
        sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = {
          "redox_syscall" = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_users";
        version = "0.3.0";
        edition = "2015";
        sha256 = "051rzqgk5hn7rf24nwgbb32zfdn8qp2kwqvdp0772ia85p737p4j";
        authors = [
          "Jose Narvaez <goyox86@gmail.com>"
          "Wesley Hershberger <mggmugginsmc@gmail.com>"
        ];
        dependencies = {
          "argon2rs" = {
            packageId = "argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "failure" = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_os" = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "redoxer 0.2.9 (path+file:///home/user/redox-nix/redoxer)"
      = rec {
        crateName = "redoxer";
        version = "0.2.9";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./.);
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = {
          "dirs" = "dirs 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-mounts" = {
            packageId = "proc-mounts 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "linux");
          };
          "redox_installer" = "redox_installer 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
          "redoxfs" = "redoxfs 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "tempfile" = "tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "toml" = "toml 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "redoxfs 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redoxfs";
        version = "0.3.6";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "04piirkfcl1lc6vjs1ia04jsisaj8djbba8mn26hmaxcilr0n12b";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        dependencies = {
          "fuse" = {
            packageId = "fuse 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!(target."os" == "redox"));
          };
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!(target."os" == "redox"));
          };
          "redox_syscall" = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
          "time" = {
            packageId = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!(target."os" == "redox"));
          };
          "uuid" = {
            packageId = "uuid 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "v4" ];
          };
        };
        features = {
        };
      };
    "remove_dir_all 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "remove_dir_all";
        version = "0.5.2";
        edition = "2015";
        sha256 = "04sxg2ppvxiljc2i13bwvpbi540rf9d2a89cq0wmqf9pjvr3a1wm";
        authors = [
          "Aaronepower <theaaronepower@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "errhandlingapi" "winerror" "fileapi" "winbase" ];
          };
        };
        features = {
        };
      };
    "ring 0.13.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ring";
        version = "0.13.5";
        edition = "2015";
        sha256 = "0b071zwzwhgmj0xyr7wqc55f4nppgjikfh53nb9m799l096s86j4";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = {
          "lazy_static" = {
            packageId = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = ((target."os" == "redox") || (target."unix" && (!((target."os" == "macos") || (target."os" == "ios")))));
          };
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "linux");
          };
          "untrusted" = "untrusted 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "cc" = "cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "use_heap" "dev_urandom_fallback" ];
          "rsa_signing" = [ "use_heap" ];
        };
        resolvedDefaultFeatures = [ "default" "dev_urandom_fallback" "rsa_signing" "use_heap" ];
      };
    "rle-decode-fast 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rle-decode-fast";
        version = "1.0.1";
        edition = "2015";
        sha256 = "1lq981ayfqszsh4q7sl4qjjnpj7h3p5hv06shnscrggh6l6ynhjp";
        authors = [
          "Moritz Wanzenböck <moritz@wanzenbug.xyz>"
        ];
        features = {
          "bench" = [ "criterion" ];
        };
      };
    "rustc-demangle 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc-demangle";
        version = "0.1.15";
        edition = "2015";
        sha256 = "04rgsfzhz4k9s56vkczsdbvmvg9409xp0nw4cy99lb2i0aa0255s";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0rgwzbgs3i9fqjm1p4ra3n7frafmpwl29c8lw85kv1rxn7n2zaa7";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = {
          "semver" = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rustls 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustls";
        version = "0.13.1";
        edition = "2015";
        sha256 = "0rg18bk9pvpdjjjw4rlr5xq3rinwpkg4729z214ri99pbbjl3mql";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = {
          "base64" = "base64 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "log" = {
            packageId = "log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "ring" = {
            packageId = "ring 0.13.5 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "rsa_signing" ];
          };
          "sct" = "sct 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "untrusted" = "untrusted 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "webpki" = "webpki 0.18.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "logging" ];
          "logging" = [ "log" ];
        };
        resolvedDefaultFeatures = [ "default" "log" "logging" ];
      };
    "safemem 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "safemem";
        version = "0.3.0";
        edition = "2015";
        sha256 = "0pr39b468d05f6m7m4alsngmj5p7an8df21apsxbi57k0lmwrr18";
        authors = [
          "Austin Bonander <austin.bonander@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scoped_threadpool";
        version = "0.1.9";
        edition = "2015";
        sha256 = "1arqj2skcfr46s1lcyvnlmfr5456kg5nhn8k90xyfjnxkp5yga2v";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
        };
      };
    "sct 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "sct";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0cl6lsy7hp42a5hxdmd1fb09wq10bx668f2zjnwqyjzmfl7v3d5g";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = {
          "ring" = "ring 0.13.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "untrusted" = "untrusted 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "0azak2lb2wc36s3x15az886kck7rpnksrw14lalm157rg9sc9z63";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = {
          "semver-parser" = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1da66c8413yakx0y15k8c055yna5lyb6fr0fw9318kdwkrk5k12h";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        features = {
        };
      };
    "serde 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde";
        version = "1.0.94";
        edition = "2015";
        sha256 = "1qk7sk8xcjlj832ia5ahkas536kz06s3y0h70rqqji6srgl716f6";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "alloc" = [ "unstable" ];
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "serde_derive 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_derive";
        version = "1.0.94";
        edition = "2015";
        sha256 = "07s8pyjbdbs5891rbkwvgr6dgk9vbkg9gppnajbhz7nxmpkhgrx4";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" ];
          };
        };
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "sha3 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "sha3";
        version = "0.8.2";
        edition = "2015";
        sha256 = "1ffswq6z8pb38501jqf8fcaasgdg89ksgag721kmn4yyc7riv2l5";
        authors = [
          "RustCrypto Developers"
        ];
        dependencies = {
          "block-buffer" = "block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "byte-tools" = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "digest" = "digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "keccak" = "keccak 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "opaque-debug" = "opaque-debug 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "digest/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "smallvec 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "smallvec";
        version = "0.6.10";
        edition = "2015";
        sha256 = "01w7xd79q0bwn683gk4ryw50ad1zzxkny10f7gkbaaj1ax6f4q4h";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "spin 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "spin";
        version = "0.5.0";
        edition = "2015";
        sha256 = "1yln8vy2z7nkwn7s7fdzmqrwk77cwmfgcp89kzxm2ljdrf5vccar";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <git@JohnEricson.me>"
        ];
        features = {
        };
      };
    "syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "0.15.39";
        edition = "2015";
        sha256 = "0n5mv317yghjcgzm0ik9racfjx8srhwfgazm6y80wgmkfpwz8myy";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
    "synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "synstructure";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0bp29grjsim99xm1l6h38mbl98gnk47lf82rawlmws5zn4asdpj4";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.39 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" "extra-traits" ];
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "take_mut 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "take_mut";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1jidav4jx1lkz69ixjh37k3m0w46adk798fv7qj6k0zhzkd1kshv";
        authors = [
          "Sgeo <sgeoster@gmail.com>"
        ];
        features = {
        };
      };
    "tar 0.4.26 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tar";
        version = "0.4.26";
        edition = "2018";
        sha256 = "1rmv889ibi1zllqpib5ywa2gdqsx4qg2l9qxr7skk4j5spcsy7lp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "filetime" = "filetime 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "xattr" = {
            packageId = "xattr 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."unix";
          };
        };
        features = {
          "default" = [ "xattr" ];
        };
        resolvedDefaultFeatures = [ "default" "xattr" ];
      };
    "tempfile 3.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tempfile";
        version = "3.1.0";
        edition = "2018";
        sha256 = "1r7ykxw90p5hm1g46i8ia33j5iwl3q252kbb6b074qhdav3sqndk";
        authors = [
          "Steven Allen <steven@stebalien.com>"
          "The Rust Project Developers"
          "Ashley Mannix <ashleymannix@live.com.au>"
          "Jason White <jasonaw0@gmail.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand" = "rand 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "remove_dir_all" = "remove_dir_all 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "fileapi" "handleapi" "winbase" ];
          };
        };
        features = {
        };
      };
    "termion 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termion";
        version = "1.5.3";
        edition = "2015";
        sha256 = "0l47ppblj8d97ch100100w9fbv47c3fhnqxbvsajcz2pj7ci414k";
        authors = [
          "ticki <Ticki@users.noreply.github.com>"
          "gycos <alexandre.bury@gmail.com>"
          "IGI-111 <igi-111@protonmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (!(target."os" == "redox"));
          };
          "numtoa" = {
            packageId = "numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "redox_termios" = {
            packageId = "redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
        };
        features = {
        };
      };
    "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0s25qh49n7kjayrdj4q3v0jk0jc6vy88rdw0bvgfxqlscpqpxi7d";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = {
          "unicode-width" = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "thread-scoped 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "thread-scoped";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0wfqc78j363rpwwlwy578mgarb7dpl8h562qf8igxk9qinyw9w0v";
        authors = [
          "arcnmx"
          "The Rust Project Developers"
        ];
        features = {
        };
      };
    "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "time";
        version = "0.1.42";
        edition = "2015";
        sha256 = "1ny809kmdjwd4b478ipc33dz7q6nq7rxk766x8cnrg6zygcksmmx";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi" ];
          };
        };
        features = {
        };
      };
    "toml 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "toml";
        version = "0.4.10";
        edition = "2015";
        sha256 = "0fs4kxl86w3kmgwcgcv23nk79zagayz1spg281r83w0ywf88d6f1";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "serde" = "serde 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "toml 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "toml";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1878ifdh576viwqg80vnhm51bng96vhyfi20jk8fv6wcifhgl4dg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "serde" = "serde 1.0.94 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "preserve_order" = [ "linked-hash-map" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "traitobject 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "traitobject";
        version = "0.1.0";
        edition = "2015";
        sha256 = "10hi8pl361l539g4kg74mcrhn7grmwlar4jl528ddn2z2jvb7lw3";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
        };
      };
    "typeable 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "typeable";
        version = "0.1.2";
        edition = "2015";
        sha256 = "0lvff10hwyy852m6r11msyv1rpgpnapn284i8dk0p0q5saqvbvnx";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
        };
      };
    "typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "typenum";
        version = "1.10.0";
        edition = "2015";
        sha256 = "1v2cgg0mlzkg5prs7swysckgk2ay6bpda8m83c2sn3z77dcsx3bc";
        build = "build/main.rs";
        authors = [
          "Paho Lurie-Gregg <paho@paholg.com>"
          "Andre Bogus <bogusandre@gmail.com>"
        ];
        features = {
        };
      };
    "unicase 1.4.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicase";
        version = "1.4.2";
        edition = "2015";
        sha256 = "0rbnhw2mnhcwrij3vczp0sl8zdfmvf2dlh8hly81kj7132kfj0mf";
        authors = [
          "Sean McArthur <sean.monstar@gmail.com>"
        ];
        buildDependencies = {
          "version_check" = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "heap_size" = [ "heapsize" "heapsize_plugin" ];
        };
      };
    "unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-bidi";
        version = "0.3.4";
        edition = "2015";
        sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
        libName = "unicode_bidi";
        authors = [
          "The Servo Project Developers"
        ];
        dependencies = {
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "flame_it" = [ "flame" "flamer" ];
          "with_serde" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-normalization";
        version = "0.1.8";
        edition = "2015";
        sha256 = "1pb26i2xd5zz0icabyqahikpca0iwj2jd4145pczc4bb7p641dsz";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        dependencies = {
          "smallvec" = "smallvec 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-width";
        version = "0.1.5";
        edition = "2015";
        sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "untrusted 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "untrusted";
        version = "0.6.2";
        edition = "2015";
        sha256 = "189ir1h2xgb290bhjchwczr9ygia1f3ipsydf6pwnnb95lb8fihg";
        libPath = "src/untrusted.rs";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        features = {
        };
      };
    "url 1.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "url";
        version = "1.7.2";
        edition = "2015";
        sha256 = "0qzrjzd9r1niv7037x4cgnv98fs1vj0k18lpxx890ipc47x5gc09";
        authors = [
          "The rust-url developers"
        ];
        dependencies = {
          "idna" = "idna 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "matches" = "matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "percent-encoding" = "percent-encoding 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "heap_size" = [ "heapsize" ];
          "query_encoding" = [ "encoding" ];
        };
      };
    "uuid 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "uuid";
        version = "0.5.1";
        edition = "2015";
        sha256 = "17d4csjmy7fa3ckrm40d3c3v411rw5d4400w756mcrzyw2pm1i2r";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand" = {
            packageId = "rand 0.3.23 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "v1" = [ "rand" ];
          "v3" = [ "md5" ];
          "v4" = [ "rand" ];
          "v5" = [ "sha1" ];
        };
        resolvedDefaultFeatures = [ "rand" "v4" ];
      };
    "version-compare 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "version-compare";
        version = "0.0.4";
        edition = "2015";
        sha256 = "01f1md5byd9aqysv4qi6rqzfqbqgynps0jfb7pr2x932a9shz0r9";
        authors = [
          "timvisee <timvisee@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "version_check";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1yrx9xblmwbafw2firxyqbj8f771kkzfd24n3q7xgwiqyhi0y8qd";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        features = {
        };
      };
    "webpki 0.18.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "webpki";
        version = "0.18.1";
        edition = "2015";
        sha256 = "1czigcq417s3chn9kijhdyjhfcniw1gxsdnvaglilwhijx0v78h3";
        libPath = "src/webpki.rs";
        authors = [
          "Brian Smith <brian@briansmith.org>"
        ];
        dependencies = {
          "ring" = "ring 0.13.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "untrusted" = "untrusted 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "trust_anchor_util" ];
          "trust_anchor_util" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" "trust_anchor_util" ];
      };
    "webpki-roots 0.15.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "webpki-roots";
        version = "0.15.0";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "1c42v0jl8sh4hp1im5hgs9wwm0x8sd0kj4dynh21fvbylaw014ll";
        authors = [
          "Joseph Birr-Pixton <jpixton@gmail.com>"
        ];
        dependencies = {
          "untrusted" = "untrusted 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "webpki" = "webpki 0.18.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.3.7";
        edition = "2015";
        sha256 = "1k51gfkp0zqw7nj07y443mscs46icmdhld442s2073niap0kkdr8";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi-i686-pc-windows-gnu" = {
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          };
          "winapi-x86_64-pc-windows-gnu" = {
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          };
        };
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "errhandlingapi" "fileapi" "handleapi" "knownfolders" "minwinbase" "minwindef" "ntdef" "ntsecapi" "objbase" "profileapi" "shlobj" "std" "sysinfoapi" "timezoneapi" "winbase" "winerror" "winnt" ];
      };
    "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "xattr 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "xattr";
        version = "0.2.2";
        edition = "2015";
        sha256 = "01zqnn6bhrd58hvpj3y1nqnbmlswrvsdapn2zbi7h1bh5lspiyk5";
        authors = [
          "Steven Allen <steven@stebalien.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "unsupported" ];
        };
        resolvedDefaultFeatures = [ "default" "unsupported" ];
      };
  };

  #
  # crate2nix/default.nix (excerpt start)
  # 

  # Target (platform) data for conditional dependencies.
  # This corresponds to what buildRustCrate is setting.
  target = {
      unix = true;
      windows = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin
        then "macos"
        else stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian" then "little" else "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
  };

  /* Filters common temp files and build files */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let baseName = builtins.baseNameOf (builtins.toString name);
    in ! (
      # Filter out git
      baseName == ".gitignore" ||
      (type == "directory" && baseName == ".git" ) ||

      # Filter out build results
      (type == "directory" && (
        baseName == "target" ||
        baseName == "_site" ||
        baseName == ".sass-cache" ||
        baseName == ".jekyll-metadata" ||
        baseName == "build-artifacts"
        )) ||

      # Filter out nix-build result symlinks
      (type == "symlink" && lib.hasPrefix "result" baseName) ||

      # Filter out IDE config
      (type == "directory" && (
        baseName == ".idea" ||
        baseName == ".vscode"
        )) ||
      lib.hasSuffix ".iml" baseName ||

      # Filter out nix build files
      # lib.hasSuffix ".nix" baseName ||

      # Filter out editor backup / swap files.
      lib.hasSuffix "~" baseName ||
      builtins.match "^\\.sw[a-z]$$" baseName != null ||
      builtins.match "^\\..*\\.sw[a-z]$$" baseName != null ||
      lib.hasSuffix ".tmp" baseName ||
      lib.hasSuffix ".bak" baseName ||
      baseName == "tests.nix"
    );

  /* A restricted overridable version of  buildRustCrateWithFeaturesImpl. */
  buildRustCrateWithFeatures = {packageId, features}:
    lib.makeOverridable
      ({features}: buildRustCrateWithFeaturesImpl {inherit packageId features;})
      { inherit features; };

  /* Returns a buildRustCrate derivation for the given packageId and features. */
  buildRustCrateWithFeaturesImpl = { crateConfigs? crates, packageId, features } @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let mergedFeatures = mergePackageFeatures args;
        buildByPackageId = packageId:
          let features = mergedFeatures."${packageId}" or [];
              crateConfig = lib.filterAttrs (n: v: n != "resolvedDefaultFeatures") crateConfigs."${packageId}";
              dependencies =
                dependencyDerivations buildByPackageId features (crateConfig.dependencies or {});
              buildDependencies =
                dependencyDerivations buildByPackageId features (crateConfig.buildDependencies or {});
              dependenciesWithRenames =
                lib.filterAttrs (n: v: v ? "rename")
                  (crateConfig.buildDependencies or {} // crateConfig.dependencies or {});
              crateRenames =
                lib.mapAttrs (name: value: value.rename or name) dependenciesWithRenames;
          in buildRustCrate (crateConfig // { inherit features dependencies buildDependencies crateRenames; });
    in buildByPackageId packageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations = buildByPackageId: features: dependencies:
    assert (builtins.isFunction buildByPackageId);
    assert (builtins.isList features);
    assert (builtins.isAttrs dependencies);

    let enabledDependencies = filterEnabledDependencies dependencies features;
        depDerivation = dependencyName: dependency:
        buildByPackageId (dependencyPackageId dependency);
    in builtins.attrValues (lib.mapAttrs depDerivation enabledDependencies);

  /* Returns differences between cargo default features and crate2nix default features.
   *
   * This is useful for verifying the feature resolution in crate2nix.
   */
  diffDefaultPackageFeatures = {crateConfigs ? crates, packageId}:
    assert (builtins.isAttrs crateConfigs);

    let prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures {inherit crateConfigs packageId; features = ["default"]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames (lib.filterAttrs (n: v: !(v ? "crate2nix" ) && (v ? "cargo")) combined);
        onlyInCrate2Nix = builtins.attrNames (lib.filterAttrs (n: v: (v ? "crate2nix" ) && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (n: v:
          (v ? "crate2nix" )
          && (v ? "cargo")
          && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or []))
          combined;
    in builtins.toJSON { inherit onlyInCargo onlyInCrate2Nix differentFeatures; };

  /* Returns the feature configuration by package id for the given input crate. */
  mergePackageFeatures = {crateConfigs ? crates, packageId, features} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let packageFeatures = listOfPackageFeatures args;
        grouped = lib.groupBy (x: x.packageId) packageFeatures;
    in lib.mapAttrs (n: v: sortedUnique (builtins.concatLists (builtins.map (v: v.features) v))) grouped;

  /* Returns a { packageId, features } attribute set for every package needed for building the
     package for the given packageId with the given features.

     Returns multiple, potentially conflicting attribute sets for dependencies that are reachable
     by multiple paths in the dependency tree.
  */
  listOfPackageFeatures = {crateConfigs ? crates, packageId, features, dependencyPath? [packageId]} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependencyName: dependency:
          let packageId = dependencyPackageId dependency;
              features = dependencyFeatures expandedFeatures dependencyName dependency;
          in { inherit packageId features; };

        resolveDependencies = path: dependencies:
          assert (builtins.isAttrs dependencies);

          let enabledDependencies = filterEnabledDependencies dependencies expandedFeatures;
              directDependencies =
                builtins.attrValues (lib.mapAttrs depWithResolvedFeatures enabledDependencies);
          in builtins.concatMap
            ({packageId, features}: listOfPackageFeatures {
              # This is purely for debugging.
              dependencyPath = dependencyPath ++ [path packageId];
              inherit crateConfigs packageId features;
            })
             directDependencies;

        resolvedDependencies = builtins.concatLists
          [
            (resolveDependencies "dependencies" (crateConfig.dependencies or {}))
            (resolveDependencies "buildDependencies" (crateConfig.buildDependencies or {}))
          ];

    in [{inherit packageId; features = expandedFeatures;}] ++ resolvedDependencies;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = dependencies: features:
    assert (builtins.isAttrs dependencies);
    assert (builtins.isList features);

    lib.filterAttrs
      (depName: dep:
        builtins.isString dep
        || dep.target or true
        && (!(dep.optional or false) || builtins.any (doesFeatureEnableDependency depName) features))
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = depName: feature:
    let prefix = "${depName}/";
        len = builtins.stringLength prefix;
        startsWithPrefix = builtins.substring 0 len feature == prefix;
    in feature == depName || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further feature names to enable in case this
     feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let expandFeature = feature:
          assert (builtins.isString feature);
          [feature] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
        outFeatures = builtins.concatMap expandFeature inputFeatures;
    in sortedUnique outFeatures;

  /* The package ID of the given dependency. */
  dependencyPackageId = dependency: if builtins.isString dependency then dependency else dependency.packageId;

  /* Returns the actual dependencies for the given dependency. */
  dependencyFeatures = features: dependencyName: dependency:
    assert (builtins.isList features);
    assert (builtins.isString dependencyName);
    assert (builtins.isAttrs dependency || builtins.isString dependency);

    let defaultOrNil = if builtins.isString dependency || dependency.usesDefaultFeatures or true
                       then ["default"]
                       else [];
        explicitFeatures = if builtins.isString dependency then [] else dependency.features or [];
        additionalDependencyFeatures =

          let dependencyPrefix = dependencyName+"/";
              dependencyFeatures =
                builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
          in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let outFeaturesSet = lib.foldl (set: feature: set // {"${feature}" = 1;} ) {} features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in builtins.sort (a: b: a < b) outFeaturesUnique;

  #
  # crate2nix/default.nix (excerpt end)
  # 

}
